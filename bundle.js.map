{"version":3,"sources":["webpack:///webpack/bootstrap 97cb56d35c0c0237c746","webpack:///./3dDemo.js","webpack:///./tycho.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,IAAG;AACH;;;;;;;ACnBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC;AACA,WAAU,YAAY;AACtB;AACA;AACA;AACA,iBAAgB;AAChB,mBAAkB;AAClB,mBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 97cb56d35c0c0237c746\n **/","var tycho = require('./tycho.js');\n\nwindow.onload = function () {\n  var canvas = document.getElementById(\"canvas\");\n\n  var earth = new tycho.Mass(60, 0.000055, 30, 30, 30, 10, 10, 0);\n  var moon = new tycho.Mass(24, 0.000055, 230, 230, 230, -10, -10, 0);\n  var bodies = [];\n  bodies.push(earth);\n  bodies.push(moon);\n\n  setInterval(function() {\n\n    earth.move(bodies);\n    moon.move(bodies);\n    earth.sphereDraw(canvas, \"#0000ff\");\n    moon.sphereDraw(canvas, \"#ffffff\");\n\n  }, 750);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./3dDemo.js\n ** module id = 0\n ** module chunks = 0\n **/","DEGREES = (Math.PI / 180);\nRADIANS = (180 / Math.PI);\n// 90*DEGREES = (π/2) & (π/2)*RADIANS = 90 //\n\nvar tycho = {\n\n  Mass: function (\n      radius,\n      density,\n      xInitial,\n      yInitial,\n      zInitial,\n      xInitialSpeed,\n      yInitialSpeed,\n      zInitialSpeed,\n      G\n  )\n  {\n    if (!G) { this.G = 0.00006674; }\n    // megaMeters used throughout (1,000,000m) //\n    else { this.G = G; }\n    this.radius = radius;\n    this.density = density;\n    this.mass = density*(4/3)*Math.PI*Math.pow(this.radius, 3);\n    this.pos = {x: xInitial, y: yInitial, z: zInitial};\n    this.speed = {x: xInitialSpeed, y: yInitialSpeed, z: zInitialSpeed};\n    this.accel = {x: 0, y: 0, z: 0};\n\n    this._gravityAccel = function (G, massOne, massTwo, distance) {\n      return massOne * ((G*massOne*massTwo)*Math.pow(distance, 2));\n    };\n\n    this._linearGravitate = function (masses, coord) {\n      masses.forEach(function(foreignMass){\n        var distance = (this.pos[coord]-foreignMass.pos[coord]);\n        console.log(this.accel);\n        this.accel[coord] = this._gravityAccel(G, this.mass, foreignMass, distance);\n        console.log(this.accel);\n      }.bind(this));\n    };\n\n    this._spatialGravitate = function (masses) {\n      this._linearGravitate(masses, \"x\");\n      this._linearGravitate(masses, \"y\");\n      this._linearGravitate(masses, \"z\");\n    };\n\n    this.move = function (masses) {\n      this._spatialGravitate(masses);\n      [\"x\", \"y\", \"z\"].forEach(function(coord){\n        this.speed[coord] += this.accel[coord];\n        this.pos[coord] += this.speed[coord];\n      }.bind(this));\n    };\n\n    this.sphereDraw = function (canvas, color, vanishingPoint) {\n      if (!vanishingPoint) {\n        vanishingPoint = {x: canvas.width/2, y: canvas.height/2, z: canvas.width};\n      }\n      var behind = (vanishingPoint.z-this.pos.z+1)/vanishingPoint;\n      var before = 1-behind;\n      var screenX = this.pos.x * behind + vanishingPoint.x * before;\n      var screenY = this.pos.y * behind + vanishingPoint.y * before;\n      var screenRadius = this.radius * behind;\n\n      var ctx = canvas.getContext('2d');\n      ctx.beginPath();\n      ctx.arc(screenX, screenY, screenRadius, 0, 2*Math.PI);\n      ctx.fillStyle = color;\n      ctx.fill();\n    };\n  },\n};\n\nmodule.exports = tycho;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./tycho.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}